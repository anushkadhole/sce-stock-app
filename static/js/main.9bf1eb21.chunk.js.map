{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","symbol","setSymbol","useState","minutes","setMinutes","seconds","setSeconds","data","setData","intervalId","setIntervalId","fetchStockData","async","url","response","axios","get","newEntry","time","Date","toLocaleTimeString","open","o","high","h","low","l","current","c","prevClose","pc","prevData","error","console","React","createElement","className","type","placeholder","value","onChange","e","target","toUpperCase","Math","max","parseInt","onClick","startFetching","clearInterval","newIntervalId","setInterval","map","entry","index","key","toFixed","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wOA4FeA,MAxFf,WACE,MAAOC,EAAQC,GAAaC,mBAAS,KAC9BC,EAASC,GAAcF,mBAAS,IAChCG,EAASC,GAAcJ,mBAAS,IAChCK,EAAMC,GAAWN,mBAAS,KAC1BO,EAAYC,GAAiBR,mBAAS,MAEvCS,EAAiBC,UACrB,IAAKZ,EAAQ,OACb,MACMa,4CAAgDb,mDAEtD,IACE,MAAMc,QAAiBC,IAAMC,IAAIH,GAC3BI,EAAW,CACfC,MAAM,IAAIC,MAAOC,qBACjBC,KAAMP,EAASP,KAAKe,EACpBC,KAAMT,EAASP,KAAKiB,EACpBC,IAAKX,EAASP,KAAKmB,EACnBC,QAASb,EAASP,KAAKqB,EACvBC,UAAWf,EAASP,KAAKuB,IAE3BtB,EAASuB,GAAa,IAAIA,EAAUd,IACpC,MAAOe,GACPC,QAAQD,MAAM,6BAA8BA,KAYhD,OACEE,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,sDACJD,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,SACEE,KAAK,OACLC,YAAY,qBACZC,MAAOvC,EACPwC,SAAWC,GAAMxC,EAAUwC,EAAEC,OAAOH,MAAMI,iBAE5CT,IAAAC,cAAA,SACEE,KAAK,SACLC,YAAY,UACZC,MAAOpC,EACPqC,SAAWC,GAAMrC,EAAWwC,KAAKC,IAAI,EAAGC,SAASL,EAAEC,OAAOH,WAE5DL,IAAAC,cAAA,SACEE,KAAK,SACLC,YAAY,UACZC,MAAOlC,EACPmC,SAAWC,GAAMnC,EAAWsC,KAAKC,IAAI,EAAGC,SAASL,EAAEC,OAAOH,WAE5DL,IAAAC,cAAA,UAAQY,QA9BQC,KAChBvC,GAAYwC,cAAcxC,GAC9BE,IACA,MACMuC,EAAgBC,YAAYxC,EADmB,KAAhB,GAAVR,EAAeE,IAE1CK,EAAcwC,KAyBsB,mBAElChB,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,OACJD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,gBAGRD,IAAAC,cAAA,aACG5B,EAAK6C,IAAI,CAACC,EAAOC,IAChBpB,IAAAC,cAAA,MAAIoB,IAAKD,GACPpB,IAAAC,cAAA,UAAKkB,EAAMnC,MACXgB,IAAAC,cAAA,UAAI,IAAEkB,EAAMhC,KAAKmC,QAAQ,IACzBtB,IAAAC,cAAA,UAAI,IAAEkB,EAAM9B,KAAKiC,QAAQ,IACzBtB,IAAAC,cAAA,UAAI,IAAEkB,EAAM5B,IAAI+B,QAAQ,IACxBtB,IAAAC,cAAA,UAAI,IAAEkB,EAAM1B,QAAQ6B,QAAQ,IAC5BtB,IAAAC,cAAA,UAAI,IAAEkB,EAAMxB,UAAU2B,QAAQ,UCvE7BC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAnB,EAAA,GAAAoB,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvC,IAAAC,cAACD,IAAMwC,WAAU,KACfxC,IAAAC,cAACpC,EAAG,QAOR0D","file":"static/js/main.9bf1eb21.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [symbol, setSymbol] = useState(\"\");\n  const [minutes, setMinutes] = useState(1);\n  const [seconds, setSeconds] = useState(0);\n  const [data, setData] = useState([]);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const fetchStockData = async () => {\n    if (!symbol) return;\n    const apiKey = process.env.REACT_APP_FINNHUB_API_KEY;\n    const url = `https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${apiKey}`;\n\n    try {\n      const response = await axios.get(url);\n      const newEntry = {\n        time: new Date().toLocaleTimeString(),\n        open: response.data.o,\n        high: response.data.h,\n        low: response.data.l,\n        current: response.data.c,\n        prevClose: response.data.pc,\n      };\n      setData((prevData) => [...prevData, newEntry]);\n    } catch (error) {\n      console.error(\"Error fetching stock data:\", error);\n    }\n  };\n\n  const startFetching = () => {\n    if (intervalId) clearInterval(intervalId);\n    fetchStockData();\n    const totalMilliseconds = (minutes * 60 + seconds) * 1000;\n    const newIntervalId = setInterval(fetchStockData, totalMilliseconds);\n    setIntervalId(newIntervalId);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Stock Exchange - SCEâ€™s Financial Advising App</h1>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter Stock Symbol\"\n          value={symbol}\n          onChange={(e) => setSymbol(e.target.value.toUpperCase())}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Minutes\"\n          value={minutes}\n          onChange={(e) => setMinutes(Math.max(0, parseInt(e.target.value)))}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Seconds\"\n          value={seconds}\n          onChange={(e) => setSeconds(Math.max(0, parseInt(e.target.value)))}\n        />\n        <button onClick={startFetching}>Start Tracking</button>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Time</th>\n            <th>Open</th>\n            <th>High</th>\n            <th>Low</th>\n            <th>Current</th>\n            <th>Prev Close</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((entry, index) => (\n            <tr key={index}>\n              <td>{entry.time}</td>\n              <td>${entry.open.toFixed(2)}</td>\n              <td>${entry.high.toFixed(2)}</td>\n              <td>${entry.low.toFixed(2)}</td>\n              <td>${entry.current.toFixed(2)}</td>\n              <td>${entry.prevClose.toFixed(2)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}